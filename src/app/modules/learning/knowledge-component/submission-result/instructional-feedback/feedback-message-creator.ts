import { Feedback, feedbackTypes } from "../../../model/learning-objects/feedback.model";

export const welcomeMessage = "Zamisli se nad tekstom zadatka i formiraj svoj odgovor.";

export function createResponse(feedback: Feedback): string {
    if(feedback.type === feedbackTypes.pump) return createPump();
    if(feedback.type === feedbackTypes.hint) return createHint(feedback);
    if(feedback.type === feedbackTypes.correctness) return createCorrectness(feedback);
    if(feedback.type === feedbackTypes.solution) return createSolution(feedback);
    return "Do≈°lo je do gre≈°ke.";
}

function createPump(): string {
    let rnd = getRandomNumber(10);
    if (rnd <= 4) return feedbackStore.pump.answer;
    if (rnd <= 9) return feedbackStore.pump.read;
    return feedbackStore.pump.instruction;
}

function createHint(feedback: Feedback): string {
    return feedbackStore.hint.basic(feedback.hint);
}

function createCorrectness(feedback: Feedback): string {
    return feedbackStore.correctness.basic(feedback.evaluation.correctnessLevel);
}

function createSolution(feedback: Feedback): string {
    if(feedback.evaluation.correct) {
        let rnd = getRandomNumber(10);
        if (rnd <= 6) return feedbackStore.solution.basicCorrect;
        return feedbackStore.solution.catCorrect;
    }
    return feedbackStore.solution.basicIncorrect(feedback.evaluation.correctnessLevel);
}

function getRandomNumber(max: number) {
    return Math.floor(Math.random() * max) + 1;
}

const incorrectAnswer = "Dati odgovor nije skroz taƒçan. ";
const alternative = "\nAlternativno, preƒëi na sledeƒái zadatak pa ƒáe≈° kasnije re≈°iti ovaj.";
// There is a deep structure to this conversation that AutoTutor has already explored. We are creating a basic version for now.
const feedbackStore = {
    satisfied: {
        party: 'Ve≈°tina savladana, bravo ü•≥! Mo≈æe≈° da preƒëe≈° na sledeƒáu (klik na taster "Lekcija") ili da pogleda≈° moj komentar na zadatak.\n\n'
    },
    pump: {
        answer: incorrectAnswer + "Ako se negde dvoumi≈°, zamisli se nad tom dilemom i formiraj nov odgovor." + alternative,
        read: incorrectAnswer + "Da li da ponovo proƒçita≈° tekst zadatka i onda formira≈° nov odgovor?" + alternative,
        instruction: incorrectAnswer + "Da li ima smisla da ponovo proƒëe≈° gradivo?" + alternative
        // A more advanced version would decide when to recommend instruction based on error patterns. We can highlight the appropriate buttons based on feedback response.
    },
    hint: {
        basic: function(hint: string) {
            return incorrectAnswer + "Zamisli se nad sledeƒáom smernicom üí°:\n" + hint + alternative;
        }
    },
    correctness: {
        basic: function(correctness: number) {
            return incorrectAnswer + "Postignuta taƒçnost je " + (correctness * 100).toFixed(0) + "%. \nHajde da preƒëemo na sledeƒái zadatak, pa ƒáemo se kasnije vratiti na ovaj.";
        }
    },
    solution: {
        basicCorrect: "Tvoj odgovor je taƒçan, sjajno üòé.\nIznad ƒáu diskutovati re≈°enje pa savetujem da analizira≈° moje teze pre nego ≈°to preƒëemo na sledeƒái zadatak.",
        catCorrect: "Tvoj odgovor je taƒçan, super üò∏.\nIznad ƒáu diskutovati re≈°enje pa savetujem da analizira≈° moje teze pre nego ≈°to preƒëemo na sledeƒái zadatak.",
        basicIncorrect: function(correctness: number) {
            return incorrectAnswer + "Postignuta taƒçnost je " + (correctness * 100).toFixed(0) + "%. \nIznad ƒáu diskutovati taƒçno re≈°enje pa savetujem da temeljno analizira≈° moje teze pre nego ≈°to preƒëemo na sledeƒái zadatak.";
        }
    }
};
